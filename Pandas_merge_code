#Basic Merge Using a Dataframe Column
import pandas as pd
df1 = pd.DataFrame({
    "city": ["new york","chicago","orlando"],
    "temperature": [21,14,35],
})
df1

df2 = pd.DataFrame({
    "city": ["chicago","new york","orlando"],
    "humidity": [65,68,75],
})
df2

df3 = pd.merge(df1,df2,on="city")
df3

#Type Of DataBase Joins
df1 = pd.DataFrame({
    "city": ["new york","chicago","orlando", "baltimore"],
    "temperature": [21,14,35, 38],
})
df1

df2 = pd.DataFrame({
    "city": ["chicago","new york","san diego"],
    "humidity": [65,68,71],
})
df2

'''by default how=inner in which common values get printed  '''
df3=pd.merge(df1,df2,how="inner")
df3

df3=pd.merge(df1,df2,how="outer")
df3

'''in this df1 is left and df2 is right, according to this the we are merging data sets according to df1,i.e, first it will print the
 common values from both data sets then print diffesmt value from df1, that's why it doesn't print san diego '''
df3=pd.merge(df1,df2,how="left")
df3

'''in this df1 is left and df2 is right, according to this the we are merging data sets according to df2,i.e, first it will print 
the common values from both data sets then print diffesmt value from df2, that's why it doesn't print baltimore '''
df3=pd.merge(df1,df2,how="right")
df3


#indicators
'''in indigator it will give the insight that which value comes from which data set like baltimore comes from df1(left) and san diego comes from df2(right)'''
df3=pd.merge(df1,df2,on='city',how="outer",indicator=True)
df3

#suffixes
df1 = pd.DataFrame({
    "city": ["new york","chicago","orlando", "baltimore"],
    "temperature": [21,14,35,38],
    "humidity": [65,68,71, 75]
})
df1

df2 = pd.DataFrame({
    "city": ["chicago","new york","san diego"],
    "temperature": [21,14,35],
    "humidity": [65,68,71]
})
df2

'''by default suffix value get printed as _x and _y but here we replaced it with _first and _second to indicatethat which value belongs to which data set'''
df3=pd.merge(df1,df2,on="city",how="outer",suffixes=('_first','_second'))
df3

